[
  {
    "filename": "index.html",
    "language": "html",
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Mews - MVP</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n    <script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>\n    <script src=\"script.js\"></script>\n</head>\n<body>\n    <header>\n        <h1><span id=\"mewsley\">üê±</span> Mews MVP</h1>\n        <button id=\"shareBtn\">Share Feed</button>\n    </header>\n\n    <main x-data=\"newsFeed()\" x-init=\"fetchNews()\">\n        <h2>Trending News (Meme Style!)</h2>\n\n        <template x-if=\"loading\">\n            <p>Loading news...</p>\n        </template>\n\n        <template x-if=\"error\">\n            <p class=\"error\" x-text=\"error\"></p>\n        </template>\n\n        <div id=\"news-container\">\n            <template x-for=\"(article, index) in articles\" :key=\"index\">\n                <div class=\"article-card\" x-data=\"{ likes: 0, dislikes: 0, sads: 0 }\">\n                    <img :src=\"article.urlToImage || 'placeholder.png'\" alt=\"News Image\" @error=\"$event.target.src='placeholder.png'\">\n                    <h3 x-text=\"transformHeadline(article.title)\"></h3>\n                    <p x-text=\"article.description || 'No description available.'\"></p>\n                    <a :href=\"article.url\" target=\"_blank\">Read Original</a>\n                    <div class=\"reactions\">\n                        <button @click=\"likes++\">üëç <span x-text=\"likes\"></span></button>\n                        <button @click=\"dislikes++\">üëé <span x-text=\"dislikes\"></span></button>\n                        <button @click=\"sads++\">üò¢ <span x-text=\"sads\"></span></button>\n                    </div>\n                </div>\n            </template>\n        </div>\n    </main>\n\n    <footer>\n        <p>Mews MVP - Built in 24 hours!</p>\n    </footer>\n</body>\n</html>"
  },
  {
    "filename": "styles.css",
    "language": "css",
    "content": "body {\n    font-family: sans-serif;\n    line-height: 1.6;\n    margin: 0;\n    background-color: #f4f4f4;\n    color: #333;\n}\n\nheader {\n    background-color: #333;\n    color: #fff;\n    padding: 1rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\nheader h1 {\n    margin: 0;\n    font-size: 1.8rem;\n}\n\n#mewsley {\n    font-size: 2rem;\n    margin-right: 10px;\n    display: inline-block;\n}\n\n#shareBtn {\n    background-color: #555;\n    color: white;\n    border: none;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n    border-radius: 4px;\n}\n\n#shareBtn:hover {\n    background-color: #777;\n}\n\nmain {\n    padding: 1rem;\n    max-width: 900px;\n    margin: 1rem auto;\n}\n\nh2 {\n    text-align: center;\n    color: #555;\n    margin-bottom: 1.5rem;\n}\n\n#news-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n    gap: 1rem;\n}\n\n.article-card {\n    background-color: #fff;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    padding: 1rem;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    display: flex;\n    flex-direction: column;\n}\n\n.article-card img {\n    max-width: 100%;\n    height: auto;\n    max-height: 180px; /* Limit image height */\n    object-fit: cover; /* Cover the area, might crop */\n    border-radius: 4px;\n    margin-bottom: 0.5rem;\n    background-color: #eee; /* Placeholder bg */\n}\n\n.article-card h3 {\n    font-size: 1.1rem;\n    margin-top: 0.5rem;\n    margin-bottom: 0.5rem;\n    color: #444;\n    flex-grow: 1; /* Allow title to take space */\n}\n\n.article-card p {\n    font-size: 0.9rem;\n    color: #666;\n    margin-bottom: 1rem;\n    flex-grow: 2; /* Allow description to take more space */\n}\n\n.article-card a {\n    display: inline-block;\n    background-color: #eee;\n    color: #333;\n    padding: 0.3rem 0.6rem;\n    text-decoration: none;\n    border-radius: 3px;\n    font-size: 0.8rem;\n    margin-bottom: 0.8rem;\n    align-self: flex-start;\n}\n\n.article-card a:hover {\n    background-color: #ddd;\n}\n\n.reactions {\n    display: flex;\n    gap: 0.5rem;\n    margin-top: auto; /* Push reactions to the bottom */\n    padding-top: 0.5rem;\n    border-top: 1px solid #eee;\n}\n\n.reactions button {\n    background: none;\n    border: 1px solid #ccc;\n    padding: 0.3rem 0.6rem;\n    cursor: pointer;\n    border-radius: 15px;\n    font-size: 0.9rem;\n}\n\n.reactions button:hover {\n    background-color: #f0f0f0;\n}\n\n.reactions span {\n    margin-left: 0.3rem;\n    font-weight: bold;\n}\n\n.error {\n    color: red;\n    text-align: center;\n    font-weight: bold;\n}\n\nfooter {\n    text-align: center;\n    margin-top: 2rem;\n    padding: 1rem;\n    background-color: #ddd;\n    color: #555;\n    font-size: 0.9rem;\n}"
  },
  {
    "filename": "script.js",
    "language": "javascript",
    "content": "document.addEventListener('alpine:init', () => {\n    Alpine.data('newsFeed', () => ({\n        // IMPORTANT: Replace 'YOUR_API_KEY' with your actual NewsAPI key\n        // Get one for free at https://newsapi.org/\n        apiKey: 38e9949744fa422383b4944c15a3f9b9, \n        articles: [],\n        loading: true,\n        error: '',\n\n        fetchNews() {\n            this.loading = true;\n            this.error = '';\n            const url = `https://newsapi.org/v2/top-headlines?country=us&pageSize=21&apiKey=${this.apiKey}`;\n\n            if (this.apiKey === 38e9949744fa422383b4944c15a3f9b9) {\n                this.error = 'Please replace YOUR_API_KEY in script.js with your actual NewsAPI key.';\n                this.loading = false;\n                console.error(this.error);\n                return;\n            }\n\n            fetch(url)\n                .then(response => {\n                    if (!response.ok) {\n                        return response.json().then(err => { throw new Error(err.message || `HTTP error! status: ${response.status}`) });\n                    }\n                    return response.json();\n                })\n                .then(data => {\n                    if (data.status === 'ok') {\n                        this.articles = data.articles;\n                    } else {\n                        throw new Error(data.message || 'Failed to fetch news');\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching news:', error);\n                    this.error = `Failed to load news: ${error.message}. Check API key and network.`;\n                })\n                .finally(() => {\n                    this.loading = false;\n                });\n        },\n\n        // Simple placeholder for headline transformation\n        transformHeadline(headline) {\n            // Very basic \"brain rot speak\" placeholders - expand this significantly!\n            const transformations = [\n                (s) => `${s} lol`, \n                (s) => `Bruh, ${s}`, \n                (s) => `Is it just me or is ${s} kinda crazy?`,\n                (s) => `${s} üíÄ`,\n                (s) => `Big news: ${s.toLowerCase()} apparently.`,\n                (s) => `Wait, ${s}? No way. üß¢`\n            ];\n            // Apply a random transformation\n            const randomIndex = Math.floor(Math.random() * transformations.length);\n            try {\n              return transformations[randomIndex](headline);\n            } catch (e) {\n              return headline; // Fallback if transformation fails\n            }\n        }\n    }));\n});\n\n// Share button functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n    const shareBtn = document.getElementById('shareBtn');\n    if(shareBtn) {\n        shareBtn.addEventListener('click', () => {\n            if (navigator.share) {\n                navigator.share({\n                    title: 'Check out this Mews Feed!',\n                    text: 'See the latest news, meme-style!',\n                    url: window.location.href\n                }).then(() => {\n                    console.log('Thanks for sharing!');\n                }).catch(console.error);\n            } else {\n                // Fallback for browsers that don't support navigator.share\n                navigator.clipboard.writeText(window.location.href).then(() => {\n                    alert('Feed URL copied to clipboard!');\n                }).catch(err => {\n                    alert('Could not copy URL. Please copy it manually.');\n                    console.error('Failed to copy URL: ', err);\n                });\n            }\n        });\n    }\n});\n\n// Simple placeholder image if real image fails to load\n// The @error directive in Alpine handles this more elegantly now,\n// but this is a fallback/alternative.\n/*\ndocument.addEventListener('error', (event) => {\n    if (event.target.tagName === 'IMG') {\n        event.target.src = 'placeholder.png';\n    }\n}, true); // Use capture phase\n*/\n\n// Note: Create a simple 'placeholder.png' image file (e.g., a gray box)\n// in the same directory for the image error handling to work visually."
  },
  {
    "filename": "placeholder.png",
    "language": "binary",
    "content": "iVBORw0KGgoAAAANSUhEUgAAASwAAACoCAMAAABt9SM9AAAAA1BMVEX///+nxBvIAAAASElEQVR4nO3BMQEAAADCoPVPbQ0PoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+BsXoAAG1flnbAAAAAElFTkSuQmCC"
  }
]