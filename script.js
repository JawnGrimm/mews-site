[
  {
    "path": "script.js",
    "language": "javascript",
    "content": "// Alpine.js component for handling the news feed\ndocument.addEventListener('alpine:init', () => {\n    Alpine.data('newsFeed', () => ({\n        // IMPORTANT: Replace 'YOUR_API_KEY' with your actual NewsAPI key\n        // Get one for free at https://newsapi.org/\n        apiKey: '38e9949744fa422383b4944c15a3f9b9', // <<< PASTE YOUR KEY HERE! >>>\n        articles: [],\n        loading: true,\n        error: '',\n\n        // Async function to fetch news from the API\n        async fetchNews() {\n            console.log('fetchNews() called. Checking API key...'); // Debug log\n            this.loading = true;\n            this.error = '';\n            // Construct the API URL\n            const url = `https://newsapi.org/v2/top-headlines?country=us&pageSize=10&apiKey=${this.apiKey}`;\n\n            // Check if the API key is still the placeholder or missing\n            if (this.apiKey === 'YOUR_API_KEY' || !this.apiKey) {\n                this.error = 'ERROR: NewsAPI key is missing or not replaced in script.js.';\n                this.loading = false;\n                console.error(this.error);\n                return; // Stop execution if key is missing\n            }\n\n            console.log('API key check passed. Attempting fetch...'); // Debug log\n\n            try {\n                // Make the network request\n                const response = await fetch(url);\n\n                // Check if the response was successful (status code 200-299)\n                if (!response.ok) {\n                    let errorMsg = `HTTP error! Status: ${response.status}`;\n                    try {\n                        // Try to get a more specific error message from NewsAPI's response body\n                        const errData = await response.json();\n                        errorMsg = errData.message || errorMsg;\n                    } catch (e) {\n                        // Ignore if response body parsing fails\n                        console.warn('Could not parse error response body.');\n                    }\n                    throw new Error(errorMsg); // Throw an error to be caught below\n                }\n\n                // Parse the JSON response body\n                const data = await response.json();\n                console.log('Fetch successful, data received:', data); // Debug log\n\n                // Check the status within the response data\n                if (data.status === 'ok') {\n                    this.articles = data.articles; // Assign fetched articles to the Alpine data\n                } else {\n                    // Handle cases where the API itself reports an error\n                    throw new Error(data.message || 'API returned an error status.');\n                }\n            } catch (error) {\n                // Handle any errors during the fetch process\n                console.error('Failed to fetch news:', error);\n                this.error = `Failed to load news: ${error.message}. Please check API key and network connection.`;\n                this.articles = []; // Clear articles on error to avoid showing stale data\n            } finally {\n                // This block runs regardless of success or error\n                this.loading = false; // Set loading state to false\n                console.log('fetchNews() finished.'); // Debug log\n            }\n        },\n\n        // init function called by Alpine.js x-init directive in index.html\n        init() {\n            console.log('Alpine component initialized.'); // Debug log\n            console.log('init() called.'); // Debug log\n            this.fetchNews(); // Fetch news when the component initializes\n        }\n    }));\n});\n"
  }
]
